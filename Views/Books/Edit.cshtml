@model DigitopiaQuest.Models.Book

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Book</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form id="imageEdit" asp-action="Edit" enctype="multipart/form-data" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="NameOfBook" class="control-label"></label>
                <input asp-for="NameOfBook" class="form-control" />
                <span asp-validation-for="NameOfBook" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DescriptionOfBook" class="control-label"></label>
                <input asp-for="DescriptionOfBook" class="form-control" />
                <span asp-validation-for="DescriptionOfBook" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AuthorOfBook" class="control-label"></label>
                <input asp-for="AuthorOfBook" class="form-control" />
                <span asp-validation-for="AuthorOfBook" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RelieseDateOfBook" class="control-label"></label>
                <input asp-for="RelieseDateOfBook" class="form-control" />
                <span asp-validation-for="RelieseDateOfBook" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RatingOfBook" class="control-label"></label>
                <input asp-for="RatingOfBook" class="form-control" />
                <span asp-validation-for="RatingOfBook" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImageOfBook" class="control-label"></label>
                <input asp-for="ImageOfBook" name="imageEdit" id="imageEdit" class="form-control" type="file" />
                <span asp-validation-for="ImageOfBook" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    // Fetch API
    async function AJAXSubmit(oFormElement) {                          //This line declares an asynchronous function named "AJAXSubmit" that takes one argument, "oFormElement".
        var resultElement = oFormElement.elements.namedItem("result"); //This line creates a variable named "resultElement" and sets it to the element with the name "result" within the "oFormElement" form.
        const formData = new FormData(oFormElement);                   //This line creates a new FormData object named "formData" that contains the values of all the form elements within the "oFormElement" form.

        try {                                                          //This line begins a try-catch block. The code inside the try block will be executed, and if an error is thrown, the code inside the catch block will be executed.
            const response = await fetch(oFormElement.action, {
                method: 'POST',
                body: formData
            });                                                        //This line makes an asynchronous HTTP POST request to the URL specified by the "action" attribute of the "oFormElement" form. The request includes the "formData" as the request body.

            if (response.ok) {
                window.location.href = '/';
            }                                                          //This line checks if the response received from the server has a status code indicating success (i.e., 200-299). If it does, the browser is redirected to the root URL ('/').

            resultElement.value = 'Result: ' + response.status + ' ' +
                response.statusText;                                   //This line sets the "value" property of the "resultElement" form element to a string containing the HTTP status code and status message of the response.
        } catch (error) {
            console.error('Error:', error);                            //This line catches any errors thrown by the code in the try block and logs them to the console using console.error().
        }
    }
</script>
